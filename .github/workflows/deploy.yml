# This is the name of your CI/CD pipeline
name: Deploy Work Radar to Hostinger

# This section defines the trigger for the pipeline.
# It will run ONLY when you push code to the "main" branch.
on:
  push:
    branches:
      - main

# This section defines the jobs to be run. We only have one job: "deploy".
jobs:
  deploy:
    # The job will run on the latest version of Ubuntu provided by GitHub Actions.
    runs-on: ubuntu-latest

    # These are the individual steps the job will execute in order.
    steps:
      # Step 1: Check out your repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Use a modern LTS version of Node.js

      # Step 3: Install frontend dependencies and build the project
      - name: Install Frontend Dependencies & Build
        run: |
          cd client
          npm install
          npm run build

      # Step 4: Securely copy the built files to your Hostinger server
      # It copies the server code and the frontend 'dist' folder.
      - name: Deploy to Hostinger
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "client/dist, server, package.json, package-lock.json"
          target: ${{ secrets.PROJECT_PATH }}
          strip_components: 1 # This helps flatten the directory structure on the server

      # Step 5: Run commands on the server to finalize the deployment
      # This installs backend dependencies and reloads the app gracefully.
      - name: Install Dependencies and Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # CORRECTED SCRIPT: Add common executable paths to the PATH variable
            export PATH=$PATH:/usr/bin:/usr/local/bin:/root/.npm-global/bin
            cd ${{ secrets.PROJECT_PATH }}/server
            npm install --production
            pm2 reload work-radar-api

